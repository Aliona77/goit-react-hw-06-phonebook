{"version":3,"sources":["components/Container/Container.styles.jsx","components/Container/Container.jsx","components/ContactForm/ContactForm.styles.jsx","components/Filter/Filter.styles.jsx","redux/phonebook/phonebook-actions.js","redux/phonebook/pnonebook-selector.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styles.jsx","components/ContactList/ContactList.jsx","App.jsx","redux/phonebook/phonebook-reducer.js","redux/phonebook/pnonebook-store.js","index.js"],"names":["Title","Containers","Container","title","children","Label","Input","ButtonAdd","Span","Text","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","getContacts","state","contacts","items","getFilter","filter","onFilteredContacts","normalizedFilter","toLowerCase","contact","includes","Filter","value","useSelector","dispatch","useDispatch","type","placeholder","pattern","onChange","e","actions","currentTarget","required","ContactForm","useState","setName","setNumber","nameInputId","numberInputId","handleChange","event","target","reset","onSubmit","preventDefault","some","alert","disabled","Contact","ContactItem","ButtonDelete","ContactList","map","onClick","onDeleteContact","App","createReducer","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.fcfe115f.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\r\n\r\n\r\nexport const Title = styled.h1`\r\n   text-align: center;\r\n    color: #000;\r\n    font-weight: bold;\r\n    font-size: 40px;\r\n`;\r\nexport const Containers = styled.div`\r\n width: 400px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 20px 40px;\r\n\r\n  background-color: rgb(47, 154, 255);\r\n  box-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\n  border-radius: 5px;\r\n  &:hover{\r\n      box-shadow: 0px 0px 5px  rgba(0,0,0,0.5);\r\n`","\r\nimport { Title, Containers } from \"./Container.styles\";\r\n\r\nexport default function Container ({ title, children }) {\r\n    return (\r\n        <Containers>\r\n            <Title>{title}</Title>\r\n            {children}\r\n      </Containers>\r\n    )\r\n};\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const Label = styled.label`\r\nfont-size:18px;\r\nfont-weight:600;\r\njustify-content:center;\r\npadding-bottom: 15px;\r\nmargin:0;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: flex;\r\n  padding: 6px;\r\n  margin-bottom: 20px;\r\n  border-radius:5px;\r\n  min-width: 300px;\r\n  cursor: pointer;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\r\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\r\n\r\n    &:focus{\r\n        border: 2px solid #eee;\r\n        outline: none;\r\n    }\r\n`\r\nexport const ButtonAdd = styled.button`\r\n  background-color: #fff;\r\n  outline: none;\r\n  padding: 6px 8px;\r\n  font-size: 12px;\r\n  line-height: 12px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n   border-radius:5px;\r\n   border: 1px solid black;\r\n   &:hover {\r\n    box-shadow: 0 0 20px rgba(50, 50, 93, 0.25);\r\n    background: blue;\r\n  }\r\n  `\r\nexport const Span = styled.span`\r\n font-size: 20px;\r\n  font-weight: 400;\r\n  margin-bottom: 7px;\r\n  `","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Text = styled.p`\r\nfont-size:18px;\r\n`","//===========REDUX_TOOLKIT==============\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContact = createAction(\"contacts/add\", ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name: name,\n    number: number,\n  },\n}));\n\nexport const deleteContact = createAction(\"contacts/delete\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n//=======================REDUX==============\n\n// import types from \"./phonebook-types\";\n// import shortid from \"shortid\";\n\n// const addContact = (name, number) => ({\n//   type: types.ADD,\n//   payload: {\n//     id: shortid.generate(),\n//     name: name,\n//     number: number,\n//   },\n// });\n\n// const deleteContact = (contactId) => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\n// const changeFilter = (value) => ({\n//   type: types.CHANGE_FILTER,\n//   pyload: value,\n// });\n\n// export default { addContact, deleteContact, changeFilter };\n","export const getContacts = (state) => state.contacts.items;\n\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const onFilteredContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","\r\nimport { Input } from '../ContactForm/ContactForm.styles';\r\nimport { Text } from './Filter.styles';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport  * as actions from '../../redux/phonebook/phonebook-actions';\r\nimport { getFilter } from '../../redux/phonebook/pnonebook-selector';\r\n\r\nconst Filter = () =>{\r\n     const value = useSelector(getFilter)\r\n    const dispatch = useDispatch()\r\n    \r\n    const changeFilterInput = (e) => dispatch(actions.changeFilter(e.currentTarget.value));\r\n\r\n    return (\r\n        <>\r\n            <Text>Find contact by name</Text>\r\n               <Input\r\n                type='text'\r\n                name='name'\r\n                placeholder=\"Name to search\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={value}\r\n                onChange={changeFilterInput}\r\n                required>\r\n                </Input>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter;\r\n\r\n//=========REDUX==================\r\n\r\n// const mapStateToPropes = (state) => ({\r\n//     value: state.filter\r\n// })\r\n// const mapDispatchToProps = dispatch => ({\r\n//  onChange:(e)=>dispatch(actions.changeFilter(e.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToPropes, mapDispatchToProps)(Filter); ","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Label, Input, ButtonAdd, Span } from './ContactForm.styles'\r\n\r\nimport { useSelector, useDispatch  } from \"react-redux\";\r\nimport *as actions from '../../redux/phonebook/phonebook-actions';\r\nimport { getContacts } from \"../../redux/phonebook/pnonebook-selector\";\r\n\r\n\r\nexport default function ContactForm() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('')\r\n  \r\n  const dispatch = useDispatch()\r\n  const contacts = useSelector(getContacts)\r\n   \r\n     \r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n  \r\n  \r\n  \r\n    \r\n  const  handleChange = event => {\r\n  const { name, value } = event.target;\r\n      \r\nswitch(name){\r\n    case \"name\":\r\n        setName(value);\r\n        break;\r\n    \r\n    case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n    default: return;\r\n      };\r\n    };\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n     \r\n      \r\n    if (contacts.some((contact) => contact.name === name)) {\r\n      alert(`${name} is already in the contacts.`)\r\n      return\r\n    } \r\n    dispatch(actions.addContact({ name, number }));\r\n    \r\n    reset();\r\n  };\r\n  \r\n    \r\n  \r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n     return (\r\n            <form onSubmit={handleSubmit}>\r\n            <Label>\r\n                <Span>Name</Span>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder= \"Enter name\"\r\n                         onChange={handleChange}\r\n                        value={name}\r\n                         id={nameInputId} \r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                          \r\n                    />\r\n            </Label>\r\n        \r\n            <Label>\r\n                <Span >Number</Span>\r\n                 <Input\r\n                  type=\"tel\"\r\n                    name=\"number\"\r\n                 placeholder=\"Enter number\"\r\n                  onChange={handleChange}\r\n                    value={number}\r\n                     id={numberInputId}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                   \r\n                />\r\n                 </Label>\r\n               \r\n               <ButtonAdd\r\n                    type=\"submit\"\r\n                    disabled={!name || !number}>Add contact</ButtonAdd>\r\n              </form>\r\n        )\r\n}\r\n\r\n//=========REDUX==================\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onSubmit:( name, number) => dispatch(actions.addContact(name, number)),\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(ContactForm);\r\n","import styled from '@emotion/styled/macro';\r\n\r\n\r\n\r\nexport const Contact = styled.ul`\r\nwidth: 300px;\r\npadding: 0;\r\n`\r\n\r\nexport const ContactItem = styled.li`\r\ndisplay:flex;\r\ntext-align:center;\r\nalign-items: center;\r\njustify-content: space-around;\r\n`\r\nexport const Text = styled.p`\r\nfont-size:18px;\r\nfont-weight: 500;\r\n`\r\nexport const ButtonDelete = styled.button`\r\nbackground-color: #fff;\r\ncursor: pointer;\r\n  border-radius:5px;\r\n  border: 1px solid black;\r\n  cursor: pointer;\r\n  &:hover {\r\n    box-shadow: 0 0 20px rgba(50, 50, 93, 0.25);\r\n    background: blue;\r\n  }\r\n`","import { Contact, ContactItem, ButtonDelete, Text } from './ContactList.styles'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n//import { connect } from 'react-redux';\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\nimport { onFilteredContacts } from '../../redux/phonebook/pnonebook-selector';\r\n\r\n\r\n\r\nconst ContactList = () =>{\r\n    const contacts = useSelector(onFilteredContacts);\r\n    const dispatch = useDispatch();\r\n    const onDeleteContact = (id) => dispatch(actions.deleteContact(id));\r\n\r\n    return(\r\n        <Contact>\r\n            {contacts.map(({id, name, number}) => (\r\n                <ContactItem\r\n                    key={id}>\r\n                    <Text>{name}:{number}\r\n                    </Text>\r\n            <ButtonDelete  type =\"button\" onClick={()=>onDeleteContact(id)}>Delete</ButtonDelete>\r\n            </ContactItem>\r\n        ))}\r\n        </Contact>\r\n    )\r\n}\r\nexport default ContactList;\r\n\r\n//=========REDUX==================\r\n\r\n//  const onFilteredContacts = (contacts, filter) => {\r\n//      const normalizedFilter = filter.toLowerCase()\r\n//     return contacts.filter(({contact}) =>\r\n//       contact.name.toLowerCase().includes(normalizedFilter),\r\n//     );\r\n// };\r\n  \r\n\r\n// const mapStateToPropes = ({ contacts: { items, filter } }) => ({\r\n//     contacts: onFilteredContacts(items, filter),\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//  onDeleteContact:(id)=>dispatch(actions.deleteContact(id)),\r\n// });\r\n\r\n\r\n//export default connect(mapStateToPropes, mapDispatchToProps)(ContactList );","\nimport Container from './components/Container/Container';\nimport Filter from './components/Filter/Filter.jsx';\nimport ContactForm from './components/ContactForm/ContactForm.jsx'\nimport ContactList from './components/ContactList/ContactList'\n\n\n\n\n\nexport default function App(){\n\n    return (\n      <Container title=\"Phonebook\">\n        <ContactForm  />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    );\n  }\n\n\n","//===========REDUX_TOOLKIT==============\n\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport * as actions from \"./phonebook-actions\";\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n\n//=======================REDUX=======\n\n// import { combineReducers } from \"redux\";\n// import types from \"./phonebook-types\";\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return state.filter((contact) => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n// export default combineReducers({\n//   items,\n//   filter,\n// });\n","//===========REDUX_TOOLKIT==============\n\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./phonebook-reducer\";\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n\n//===========================REDUX===============\n\n// import contactsReducer from \"./phonebook-reducer\";\n// import { createStore, combineReducers } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n// export default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/phonebook/pnonebook-store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}